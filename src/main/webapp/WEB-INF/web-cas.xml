<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	version="2.4"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee   http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	<display-name>sloa</display-name>
	<description>sloa</description>
	<!--
		used by String ! enable log4j proprerties file use ${webapproot}
		locate log files diractory
	-->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>sloa</param-value>
	</context-param>
	<!--
		- Location of the XML file that defines the root application context -
		Applied by ContextLoaderListener.
	-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:net/bull/javamelody/monitoring-spring.xml
			/WEB-INF/spring/*Context.xml
		</param-value>
	</context-param>
	<!--
		used by String !
		log4j proprerties file
	-->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/classes/log4j.properties</param-value>
	</context-param>
	<!--
		used by String ! log4j proprerties file check reload inteval （in ms）
	-->
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>10000</param-value>
	</context-param>

    <listener>
            <listener-class>net.bull.javamelody.SessionListener</listener-class>
    </listener>
	<!--
		log4j listener
	-->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<!--
		spring configue loader
	-->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!--
		Concurrent Session Control,can make only one session validated by one
		login user
	-->
	<listener>
		<listener-class>org.springframework.security.ui.session.HttpSessionEventPublisher</listener-class>
	</listener>

	<listener>
		<listener-class>com.sunnsoft.util.UserImageTempPathDeleteSessionListener </listener-class>
	</listener>

	<!-- Cas single sign out -->
	<listener>
		<listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
	</listener>

	<!-- Cas single sign out -->
	<filter>
	   <filter-name>CAS Single Sign Out Filter</filter-name>
	   <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
	</filter>
	<filter>
    	<filter-name>monitoring</filter-name>
         <filter-class>net.bull.javamelody.MonitoringFilter</filter-class>
    </filter>
	<filter>
		<filter-name>setCharacterEncoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter>
		<filter-name>openSessionInViewFilterDelegate</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.FilterDispatcher</filter-class>
	</filter>

	<!-- Cas single sign out -->
	<filter-mapping>
	   <filter-name>CAS Single Sign Out Filter</filter-name>
	   <url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>openSessionInViewFilterDelegate</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>setCharacterEncoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- struts 2 的 filter 一定要放最后。否则，struts2的action全部不会被这些filter过滤 -->

	<filter-mapping>
        <filter-name>monitoring</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- servlet  -->

	<servlet>
		<servlet-name>ValidateCodeServlet</servlet-name>
		<servlet-class>com.sunnsoft.servlet.ValidateCodeServlet</servlet-class>
		<init-param>
			<param-name>width</param-name>
			<param-value>80</param-value>
		</init-param>
		<init-param>
			<param-name>height</param-name>
			<param-value>23</param-value>
		</init-param>
		<init-param>
			<param-name>codeCount</param-name>
			<param-value>4</param-value>
		</init-param>
		<init-param>
			<param-name>leftMargin</param-name>
			<param-value>5</param-value>
		</init-param>
		<init-param>
			<param-name>maxRandomPositionX</param-name>
			<param-value>8</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>FileDownloadServlet</servlet-name>
		<servlet-class>com.sunnsoft.servlet.FileDownloadServlet</servlet-class>
		<init-param>
			<param-name>fileNotFoundDefault</param-name>
			<param-value>/sloa/img/default_person.gif</param-value>
		</init-param>
	</servlet>
	<servlet>
		<servlet-name>TempFileServlet</servlet-name>
		<servlet-class>com.sunnsoft.servlet.FileDownloadServlet</servlet-class>
		<init-param>
			<param-name>fileStoreBeanId</param-name>
			<param-value>userTempStore</param-value>
		</init-param>
		<init-param>
			<param-name>sessionPath</param-name>
			<param-value>true</param-value>
		</init-param>
	</servlet>
	<servlet>
	    <servlet-name>remoting</servlet-name>
	    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	    <load-on-startup>2</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>ValidateCodeServlet</servlet-name>
		<url-pattern>/validateCode.gif</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>FileDownloadServlet</servlet-name>
		<url-pattern>/file/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>TempFileServlet</servlet-name>
		<url-pattern>/temp/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
	    <servlet-name>remoting</servlet-name>
	    <url-pattern>/remoting/*</url-pattern>
	</servlet-mapping>

	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/error.jsp</location>
	</error-page>

	<welcome-file-list>
		<welcome-file>main.htm</welcome-file>
	</welcome-file-list>
</web-app>

