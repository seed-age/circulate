<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="war" name="${project.name}">

	<target name="init">
		
		<property name="name" value="${project.name}" />
		
	    <condition property="deploy.name" else="${project.name}" value="${deploy.name}">
		 	<isset property="deploy.name">			
		 	</isset>
		</condition>
		
		<property name="version" value="0.7" />
		<property name="year" value="2010" />

		<echo message="----------- ${name} ${version} [${year}] ------------" />
		<echo message="----------- project deploy name : ${deploy.name} ------------" />
		<property name="debug" value="on" />
		<property name="optimize" value="on" />
		<property name="deprecation" value="on" />

		<!--    java源文件路径 -->

		<property name="src.dir" value="${basedir}/src" />
		
		<!-- webservice生成的代码源文件路径-->
		<property name="src.webservice.client.dir" value="${basedir}/WebServiceClient" />


		<!--    jar包路径 -->
		<property name="lib.dir" value="${basedir}/WebRoot/WEB-INF/lib" />

		<!--    webapp路径 -->
		<property name="webapp.dir" value="${basedir}/WebRoot" />

		<!--    准备源文件路径 -->
		<property name="build.src" value="${basedir}/target/build" />

		<!--    准备webapp文件路径 -->
		<property name="buildwar.dest" value="${basedir}/target/warsrc" />

		<!--    打包war文件路径 -->
		<property name="war.dest" value="${basedir}/target/war" />

		<property name="j2eelib.dir" value="${basedir}/jeelib" />

		<!--    classpath -->
		<path id="classpath">

			<fileset dir="${j2eelib.dir}">
				<include name="**/*.jar" />
			</fileset>
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
			</fileset>
			<!--<pathelement location="lib/"/>-->
		</path>

		<filter token="year" value="${year}" />
		<filter token="version" value="${version}" />
		<filter token="date" value="${TODAY}" />
		<filter token="log" value="true" />
		<filter token="verbose" value="true" />

	</target>

	<!-- =================================================================== -->
	<!-- Help on usage -->
	<!-- =================================================================== -->
	<target name="usage" depends="init">
		<echo message="${name} Build file" />
		<echo message="-------------------------------------------------------------" />
		<echo message="" />
		<echo message=" available targets are:" />
		<echo message="" />
		<echo message=" jar --> generates the ${name}.jar file" />
		<echo message=" build --> compiles the source code" />
		<echo message=" javadoc --> generates the API documentation" />
		<echo message=" clean --> cleans up the directory" />
		<echo message="" />
		<echo message=" Please rename build.properties.default to build.properties" />
		<echo message=" and edit build.properties to specify JSDK 2.3 classpath." />
		<echo message="" />
		<echo message=" See the comments inside the build.xml file for more details." />
		<echo message="-------------------------------------------------------------" />
		<echo message="" />
		<echo message="" />
	</target>

	<!-- =================================================================== -->
	<!-- 准备源文件-->
	<!-- =================================================================== -->
	<target name="prepare-src" depends="init">
		<!-- create directories -->
		<mkdir dir="${build.src}" />
		<mkdir dir="${war.dest}" />
		<mkdir dir="${buildwar.dest}" />

		<!-- copy src files -->
		<copy todir="${build.src}">
			<fileset dir="${src.dir}" />
		</copy>
		<copy todir="${build.src}">
			<fileset dir="${src.webservice.client.dir}" />
		</copy>
		<copy todir="${buildwar.dest}">
			<fileset dir="${webapp.dir}">
				<exclude name="WEB-INF/classes/**"/>
			</fileset>
		</copy>
		<mkdir dir="${buildwar.dest}/WEB-INF/classes"/>
	</target>

	<!-- =================================================================== -->
	<!-- 编译源文件-->
	<!-- =================================================================== -->
	<target name="build" depends="prepare-src">
		<javac encoding="UTF-8" srcdir="${build.src}" destdir="${buildwar.dest}/WEB-INF/classes" debug="${debug}" optimize="${optimize}">
			<classpath refid="classpath" />
		</javac>
		<!-- 拷贝属性文件等非JAVA编译文件，以及排除掉JAVA编译文件（避免旧的class文件被覆盖）-->
		<copy todir="${buildwar.dest}/WEB-INF/classes" overwrite="true">
			<fileset dir="${build.src}">
				<include name="**/*" />
				<exclude name="**/*.class"/>
			</fileset>
		</copy>
	</target>

	<!-- =================================================================== -->
	<!-- 打war包-->
	<!-- =================================================================== -->

	<target name="war" depends="clean,build">
		<copy overwrite="true" tofile="${buildwar.dest}/WEB-INF/classes/log4j.properties" file="${buildwar.dest}/WEB-INF/classes/log4j-deploy.properties">
			<filterchain>
				<filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
			      	<param type="token" name="project.name" value="${deploy.name}"/>
			    </filterreader>
			</filterchain>
		</copy>
		<copy overwrite="true" tofile="${buildwar.dest}/WEB-INF/classes/project.properties" file="${buildwar.dest}/WEB-INF/classes/project-deploy.properties">
			<filterchain>
				<filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
			      	<param type="token" name="project.name" value="${project.name}"/>
					<param type="token" name="web.server" value="${web.server}"/>
					<param type="token" name="db.server" value="${db.server}"/>
			      	<param type="token" name="db.schema" value="${db.schema}"/>
			      	<param type="token" name="jdbc.username" value="${jdbc.username}"/>
					<param type="token" name="jdbc.password" value="${jdbc.password}"/>
					<param type="token" name="schedule.on" value="${schedule.on}"/>
					
					<param type="token" name="oa.box.userslug" value="${oa.box.userslug}"/>
					<param type="token" name="oa.box.password" value="${oa.box.password}"/>
					<param type="token" name="oa.box.url" value="${oa.box.url}"/>
					<param type="token" name="oa.box.upload.url" value="${oa.box.upload.url}"/>
					
			    </filterreader>
			</filterchain>
		</copy>
		<copy overwrite="true" tofile="${buildwar.dest}/WEB-INF/classes/struts.xml" file="${buildwar.dest}/WEB-INF/classes/struts-deploy.xml"/>
		<copy overwrite="true" tofile="${buildwar.dest}/WEB-INF/lib/dao-core.jar" file="${basedir}/jeelib/product/dao-core-prod.jar"/>
		<copy overwrite="true" tofile="${buildwar.dest}/WEB-INF/spring/resourceContext.xml" file="${buildwar.dest}/WEB-INF/spring/resourceContext-deploy.xml"/>
		<copy overwrite="true" tofile="${buildwar.dest}/WEB-INF/web.xml" file="${buildwar.dest}/WEB-INF/web-deploy.xml">
			<filterchain>
				<filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
			      	<param type="token" name="deploy.name" value="${deploy.name}"/>
			    </filterreader>
			</filterchain>
		</copy>

		<war warfile="${war.dest}/${deploy.name}.war" webxml="${buildwar.dest}/WEB-INF/web.xml">
			<lib dir="${buildwar.dest}/WEB-INF/lib">
			</lib>
			<classes dir="${buildwar.dest}/WEB-INF/classes">
				<exclude name="**/*.java"/>
				<exclude name="**/*.pdb"/>
				<exclude name="**/*.pdm"/>
			</classes>
			<fileset dir="${buildwar.dest}">
				<exclude name="WEB-INF/classes/**"/>
				<exclude name="WEB-INF/lib/*"/>
			</fileset>
		</war>

	</target>

	<!-- =================================================================== -->
	<!-- 清除临时文件-->
	<!-- =================================================================== -->
	<target name="clean" depends="init">
		<delete quiet="true" dir="${build.src}" />
		<delete quiet="true" dir="${buildwar.dest}" />
		<delete quiet="true" dir="${war.dest}" />
	</target>

</project>